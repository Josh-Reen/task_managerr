{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kimmie\\\\task_managerr\\\\task-manager\\\\client\\\\src\\\\pages\\\\Tasks.js\",\n  _s = $RefreshSig$();\n// src/components/Tasks.js\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { FaPlus, FaCheck, FaUndo, FaEdit, FaTrash, FaSignOutAlt, FaTasks, FaCheckCircle, FaTimesCircle, FaAngleDown, FaAngleUp, FaArchive } from 'react-icons/fa';\nimport '../index.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Tasks = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [endDate, setEndDate] = useState(''); // New state for end date\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [editingTaskId, setEditingTaskId] = useState(null);\n  const [editTitle, setEditTitle] = useState('');\n  const [editDescription, setEditDescription] = useState('');\n  const [editEndDate, setEditEndDate] = useState(''); // New state for editing end date\n  const [stats, setStats] = useState({\n    completed: 0,\n    incomplete: 0,\n    archived: 0,\n    total: 0\n  });\n  const [selectedMonth, setSelectedMonth] = useState(() => {\n    const now = new Date();\n    return {\n      month: now.getMonth(),\n      year: now.getFullYear()\n    };\n  });\n  const [expandedYear, setExpandedYear] = useState(new Date().getFullYear());\n  const [showArchived, setShowArchived] = useState(false); // Toggle archived tasks\n  const navigate = useNavigate();\n  const apiUrl = process.env.REACT_APP_API_URL || 'http://localhost:5000';\n  useEffect(() => {\n    fetchTasks(selectedMonth);\n  }, [selectedMonth]);\n  const getAuthHeader = () => {\n    const token = localStorage.getItem('token');\n    return token ? {\n      Authorization: `Bearer ${token}`\n    } : null;\n  };\n  const fetchTasks = async (monthFilter = selectedMonth) => {\n    setLoading(true);\n    setError('');\n    const headers = getAuthHeader();\n    if (!headers) {\n      setError('Please log in to view tasks');\n      navigate('/login');\n      return;\n    }\n    try {\n      const res = await axios.get(`${apiUrl}/api/tasks`, {\n        headers,\n        params: {\n          includeArchived: showArchived\n        }\n      });\n      const allTasks = res.data;\n      setTasks(filterByMonth(allTasks, monthFilter));\n      updateStats(allTasks);\n    } catch (err) {\n      var _err$response, _err$response2;\n      console.error('Fetch tasks error:', ((_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.data) || err.message);\n      if (((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : _err$response2.status) === 401) {\n        setError('Session expired. Please log in again.');\n        localStorage.removeItem('token');\n        navigate('/login');\n      } else {\n        setError('Failed to fetch tasks');\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n  const updateStats = allTasks => {\n    const completed = allTasks.filter(t => t.completed && !t.isArchived).length;\n    const incomplete = allTasks.filter(t => !t.completed && !t.isArchived).length;\n    const archived = allTasks.filter(t => t.isArchived).length;\n    const total = allTasks.length;\n    setStats({\n      completed,\n      incomplete,\n      archived,\n      total\n    });\n  };\n  const filterByMonth = (tasks, {\n    month,\n    year\n  }) => {\n    return tasks.filter(task => {\n      const taskDate = new Date(task.createdAt);\n      return taskDate.getMonth() === month && taskDate.getFullYear() === year;\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const headers = getAuthHeader();\n    if (!headers) return;\n    try {\n      await axios.post(`${apiUrl}/api/tasks`, {\n        title,\n        description,\n        endDate\n      }, {\n        headers\n      });\n      setTitle('');\n      setDescription('');\n      setEndDate('');\n      fetchTasks();\n    } catch (err) {\n      setError('Failed to add task');\n    }\n  };\n  const toggleComplete = async task => {\n    const headers = getAuthHeader();\n    if (!headers) return;\n    try {\n      await axios.put(`${apiUrl}/api/tasks/${task._id}`, {\n        ...task,\n        completed: !task.completed\n      }, {\n        headers\n      });\n      fetchTasks(selectedMonth);\n    } catch (err) {\n      setError('Failed to update task');\n    }\n  };\n  const archiveTask = async id => {\n    const headers = getAuthHeader();\n    if (!headers) return;\n    try {\n      await axios.delete(`${apiUrl}/api/tasks/${id}`, {\n        headers\n      });\n      fetchTasks(selectedMonth);\n    } catch (err) {\n      setError('Failed to archive task');\n    }\n  };\n  const restoreTask = async id => {\n    const headers = getAuthHeader();\n    if (!headers) return;\n    try {\n      await axios.put(`${apiUrl}/api/tasks/restore/${id}`, {}, {\n        headers\n      });\n      fetchTasks(selectedMonth);\n    } catch (err) {\n      setError('Failed to restore task');\n    }\n  };\n  const startEditing = task => {\n    setEditingTaskId(task._id);\n    setEditTitle(task.title);\n    setEditDescription(task.description || '');\n    setEditEndDate(task.endDate ? new Date(task.endDate).toISOString().split('T')[0] : '');\n  };\n  const cancelEditing = () => {\n    setEditingTaskId(null);\n    setEditTitle('');\n    setEditDescription('');\n    setEditEndDate('');\n  };\n  const saveEdit = async id => {\n    const headers = getAuthHeader();\n    if (!headers) return;\n    try {\n      await axios.put(`${apiUrl}/api/tasks/${id}`, {\n        title: editTitle,\n        description: editDescription,\n        endDate: editEndDate,\n        completed: tasks.find(t => t._id === id).completed\n      }, {\n        headers\n      });\n      setEditingTaskId(null);\n      fetchTasks(selectedMonth);\n    } catch (err) {\n      setError('Failed to update task');\n    }\n  };\n  const handleLogout = () => {\n    localStorage.removeItem('token');\n    navigate('/login');\n  };\n  const months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n  const currentYear = new Date().getFullYear();\n  const years = Array.from({\n    length: 5\n  }, (_, i) => currentYear - i);\n  const toggleYear = year => {\n    setExpandedYear(expandedYear === year ? null : year);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stats\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Task Statistics\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(FaTasks, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 14\n          }, this), \" Total Tasks: \", stats.total]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(FaCheckCircle, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 14\n          }, this), \" Completed: \", stats.completed]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(FaTimesCircle, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 14\n          }, this), \" Incomplete: \", stats.incomplete]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(FaArchive, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 14\n          }, this), \" Archived: \", stats.archived]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"task-form-container\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          className: \"task-form\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            value: title,\n            onChange: e => setTitle(e.target.value),\n            placeholder: \"Task Title\",\n            required: true,\n            className: \"task-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: description,\n            onChange: e => setDescription(e.target.value),\n            placeholder: \"Description\",\n            className: \"task-textarea\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            value: endDate,\n            onChange: e => setEndDate(e.target.value),\n            className: \"task-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"task-button primary\",\n            children: [/*#__PURE__*/_jsxDEV(FaPlus, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 15\n            }, this), \" Add Task\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"month-filter\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Filter by Month\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            const now = new Date();\n            setSelectedMonth({\n              month: now.getMonth(),\n              year: now.getFullYear()\n            });\n            fetchTasks({\n              month: now.getMonth(),\n              year: now.getFullYear()\n            });\n          },\n          className: `month-button ${(selectedMonth === null || selectedMonth === void 0 ? void 0 : selectedMonth.month) === new Date().getMonth() && (selectedMonth === null || selectedMonth === void 0 ? void 0 : selectedMonth.year) === new Date().getFullYear() ? 'active' : ''}`,\n          children: \"Current Month\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 11\n        }, this), years.map(year => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"year-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => toggleYear(year),\n            className: \"year-toggle\",\n            children: [year, \" \", expandedYear === year ? /*#__PURE__*/_jsxDEV(FaAngleUp, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 49\n            }, this) : /*#__PURE__*/_jsxDEV(FaAngleDown, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 65\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 15\n          }, this), expandedYear === year && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"month-list\",\n            children: months.map((month, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                setSelectedMonth({\n                  month: index,\n                  year\n                });\n                fetchTasks({\n                  month: index,\n                  year\n                });\n              },\n              className: `month-button ${(selectedMonth === null || selectedMonth === void 0 ? void 0 : selectedMonth.month) === index && (selectedMonth === null || selectedMonth === void 0 ? void 0 : selectedMonth.year) === year ? 'active' : ''}`,\n              children: month\n            }, `${year}-${index}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 17\n          }, this)]\n        }, year, true, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          setShowArchived(!showArchived);\n          fetchTasks();\n        },\n        className: \"task-button\",\n        children: showArchived ? 'Hide Archived' : 'Show Archived'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"title\",\n          children: \"Task Manager\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleLogout,\n          className: \"task-button logout\",\n          children: [/*#__PURE__*/_jsxDEV(FaSignOutAlt, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 13\n          }, this), \" Logout\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 19\n      }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading tasks...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"task-list\",\n        children: tasks.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"No tasks found for \", months[selectedMonth.month], \" \", selectedMonth.year, \".\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 15\n        }, this) : tasks.map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `task-card ${task.completed ? 'completed' : ''} ${task.isArchived ? 'archived' : ''}`,\n          children: editingTaskId === task._id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              value: editTitle,\n              onChange: e => setEditTitle(e.target.value),\n              placeholder: \"Task Title\",\n              className: \"task-input edit-input\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              value: editDescription,\n              onChange: e => setEditDescription(e.target.value),\n              placeholder: \"Description\",\n              className: \"task-textarea edit-textarea\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"date\",\n              value: editEndDate,\n              onChange: e => setEditEndDate(e.target.value),\n              className: \"task-input edit-input\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 296,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"task-actions\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => saveEdit(task._id),\n                className: \"task-button save\",\n                children: [/*#__PURE__*/_jsxDEV(FaCheck, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 304,\n                  columnNumber: 27\n                }, this), \" Save\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 303,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: cancelEditing,\n                className: \"task-button cancel\",\n                children: \"Cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 306,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 302,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"task-title\",\n              children: task.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 313,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"task-desc\",\n              children: task.description || 'No description'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 314,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"task-date\",\n              children: [\"Created: \", new Date(task.createdAt).toLocaleDateString()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 23\n            }, this), task.endDate && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"task-date\",\n              children: [\"End Date: \", new Date(task.endDate).toLocaleDateString()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 317,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"task-actions\",\n              children: [!task.isArchived && /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => toggleComplete(task),\n                  className: `task-button ${task.completed ? 'undo' : 'complete'}`,\n                  children: [task.completed ? /*#__PURE__*/_jsxDEV(FaUndo, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 326,\n                    columnNumber: 49\n                  }, this) : /*#__PURE__*/_jsxDEV(FaCheck, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 326,\n                    columnNumber: 62\n                  }, this), task.completed ? ' Mark Incomplete' : ' Mark Complete']\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 322,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => startEditing(task),\n                  className: \"task-button edit\",\n                  children: [/*#__PURE__*/_jsxDEV(FaEdit, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 330,\n                    columnNumber: 31\n                  }, this), \" Edit\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 329,\n                  columnNumber: 29\n                }, this)]\n              }, void 0, true), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => task.isArchived ? restoreTask(task._id) : archiveTask(task._id),\n                className: \"task-button delete\",\n                children: [task.isArchived ? /*#__PURE__*/_jsxDEV(FaUndo, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 338,\n                  columnNumber: 46\n                }, this) : /*#__PURE__*/_jsxDEV(FaTrash, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 338,\n                  columnNumber: 59\n                }, this), task.isArchived ? ' Restore' : ' Archive']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 334,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 319,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true)\n        }, task._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 184,\n    columnNumber: 5\n  }, this);\n};\n_s(Tasks, \"PDVoSUtYk03OwxqES5lL6+LxMuw=\", false, function () {\n  return [useNavigate];\n});\n_c = Tasks;\nexport default Tasks;\nvar _c;\n$RefreshReg$(_c, \"Tasks\");","map":{"version":3,"names":["React","useState","useEffect","axios","useNavigate","FaPlus","FaCheck","FaUndo","FaEdit","FaTrash","FaSignOutAlt","FaTasks","FaCheckCircle","FaTimesCircle","FaAngleDown","FaAngleUp","FaArchive","jsxDEV","_jsxDEV","Fragment","_Fragment","Tasks","_s","tasks","setTasks","title","setTitle","description","setDescription","endDate","setEndDate","error","setError","loading","setLoading","editingTaskId","setEditingTaskId","editTitle","setEditTitle","editDescription","setEditDescription","editEndDate","setEditEndDate","stats","setStats","completed","incomplete","archived","total","selectedMonth","setSelectedMonth","now","Date","month","getMonth","year","getFullYear","expandedYear","setExpandedYear","showArchived","setShowArchived","navigate","apiUrl","process","env","REACT_APP_API_URL","fetchTasks","getAuthHeader","token","localStorage","getItem","Authorization","monthFilter","headers","res","get","params","includeArchived","allTasks","data","filterByMonth","updateStats","err","_err$response","_err$response2","console","response","message","status","removeItem","filter","t","isArchived","length","task","taskDate","createdAt","handleSubmit","e","preventDefault","post","toggleComplete","put","_id","archiveTask","id","delete","restoreTask","startEditing","toISOString","split","cancelEditing","saveEdit","find","handleLogout","months","currentYear","years","Array","from","_","i","toggleYear","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","value","onChange","target","placeholder","required","type","onClick","map","index","toLocaleDateString","_c","$RefreshReg$"],"sources":["C:/Users/kimmie/task_managerr/task-manager/client/src/pages/Tasks.js"],"sourcesContent":["// src/components/Tasks.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { \r\n  FaPlus, FaCheck, FaUndo, FaEdit, FaTrash, FaSignOutAlt, \r\n  FaTasks, FaCheckCircle, FaTimesCircle, FaAngleDown, FaAngleUp, FaArchive\r\n} from 'react-icons/fa';\r\nimport '../index.css';\r\n\r\nconst Tasks = () => {\r\n  const [tasks, setTasks] = useState([]);\r\n  const [title, setTitle] = useState('');\r\n  const [description, setDescription] = useState('');\r\n  const [endDate, setEndDate] = useState(''); // New state for end date\r\n  const [error, setError] = useState('');\r\n  const [loading, setLoading] = useState(true);\r\n  const [editingTaskId, setEditingTaskId] = useState(null);\r\n  const [editTitle, setEditTitle] = useState('');\r\n  const [editDescription, setEditDescription] = useState('');\r\n  const [editEndDate, setEditEndDate] = useState(''); // New state for editing end date\r\n  const [stats, setStats] = useState({ completed: 0, incomplete: 0, archived: 0, total: 0 });\r\n  const [selectedMonth, setSelectedMonth] = useState(() => {\r\n    const now = new Date();\r\n    return { month: now.getMonth(), year: now.getFullYear() };\r\n  });\r\n  const [expandedYear, setExpandedYear] = useState(new Date().getFullYear());\r\n  const [showArchived, setShowArchived] = useState(false); // Toggle archived tasks\r\n  const navigate = useNavigate();\r\n  const apiUrl = process.env.REACT_APP_API_URL || 'http://localhost:5000';\r\n\r\n  useEffect(() => {\r\n    fetchTasks(selectedMonth);\r\n  }, [selectedMonth]);\r\n\r\n  const getAuthHeader = () => {\r\n    const token = localStorage.getItem('token');\r\n    return token ? { Authorization: `Bearer ${token}` } : null;\r\n  };\r\n\r\n  const fetchTasks = async (monthFilter = selectedMonth) => {\r\n    setLoading(true);\r\n    setError('');\r\n    const headers = getAuthHeader();\r\n    if (!headers) {\r\n      setError('Please log in to view tasks');\r\n      navigate('/login');\r\n      return;\r\n    }\r\n    try {\r\n      const res = await axios.get(`${apiUrl}/api/tasks`, { \r\n        headers, \r\n        params: { includeArchived: showArchived } \r\n      });\r\n      const allTasks = res.data;\r\n      setTasks(filterByMonth(allTasks, monthFilter));\r\n      updateStats(allTasks);\r\n    } catch (err) {\r\n      console.error('Fetch tasks error:', err.response?.data || err.message);\r\n      if (err.response?.status === 401) {\r\n        setError('Session expired. Please log in again.');\r\n        localStorage.removeItem('token');\r\n        navigate('/login');\r\n      } else {\r\n        setError('Failed to fetch tasks');\r\n      }\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const updateStats = (allTasks) => {\r\n    const completed = allTasks.filter(t => t.completed && !t.isArchived).length;\r\n    const incomplete = allTasks.filter(t => !t.completed && !t.isArchived).length;\r\n    const archived = allTasks.filter(t => t.isArchived).length;\r\n    const total = allTasks.length;\r\n    setStats({ completed, incomplete, archived, total });\r\n  };\r\n\r\n  const filterByMonth = (tasks, { month, year }) => {\r\n    return tasks.filter(task => {\r\n      const taskDate = new Date(task.createdAt);\r\n      return taskDate.getMonth() === month && taskDate.getFullYear() === year;\r\n    });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const headers = getAuthHeader();\r\n    if (!headers) return;\r\n    try {\r\n      await axios.post(`${apiUrl}/api/tasks`, { title, description, endDate }, { headers });\r\n      setTitle('');\r\n      setDescription('');\r\n      setEndDate('');\r\n      fetchTasks();\r\n    } catch (err) {\r\n      setError('Failed to add task');\r\n    }\r\n  };\r\n\r\n  const toggleComplete = async (task) => {\r\n    const headers = getAuthHeader();\r\n    if (!headers) return;\r\n    try {\r\n      await axios.put(`${apiUrl}/api/tasks/${task._id}`, { ...task, completed: !task.completed }, { headers });\r\n      fetchTasks(selectedMonth);\r\n    } catch (err) {\r\n      setError('Failed to update task');\r\n    }\r\n  };\r\n\r\n  const archiveTask = async (id) => {\r\n    const headers = getAuthHeader();\r\n    if (!headers) return;\r\n    try {\r\n      await axios.delete(`${apiUrl}/api/tasks/${id}`, { headers });\r\n      fetchTasks(selectedMonth);\r\n    } catch (err) {\r\n      setError('Failed to archive task');\r\n    }\r\n  };\r\n\r\n  const restoreTask = async (id) => {\r\n    const headers = getAuthHeader();\r\n    if (!headers) return;\r\n    try {\r\n      await axios.put(`${apiUrl}/api/tasks/restore/${id}`, {}, { headers });\r\n      fetchTasks(selectedMonth);\r\n    } catch (err) {\r\n      setError('Failed to restore task');\r\n    }\r\n  };\r\n\r\n  const startEditing = (task) => {\r\n    setEditingTaskId(task._id);\r\n    setEditTitle(task.title);\r\n    setEditDescription(task.description || '');\r\n    setEditEndDate(task.endDate ? new Date(task.endDate).toISOString().split('T')[0] : '');\r\n  };\r\n\r\n  const cancelEditing = () => {\r\n    setEditingTaskId(null);\r\n    setEditTitle('');\r\n    setEditDescription('');\r\n    setEditEndDate('');\r\n  };\r\n\r\n  const saveEdit = async (id) => {\r\n    const headers = getAuthHeader();\r\n    if (!headers) return;\r\n    try {\r\n      await axios.put(`${apiUrl}/api/tasks/${id}`, { \r\n        title: editTitle, \r\n        description: editDescription, \r\n        endDate: editEndDate,\r\n        completed: tasks.find(t => t._id === id).completed \r\n      }, { headers });\r\n      setEditingTaskId(null);\r\n      fetchTasks(selectedMonth);\r\n    } catch (err) {\r\n      setError('Failed to update task');\r\n    }\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    localStorage.removeItem('token');\r\n    navigate('/login');\r\n  };\r\n\r\n  const months = [\r\n    'January', 'February', 'March', 'April', 'May', 'June',\r\n    'July', 'August', 'September', 'October', 'November', 'December'\r\n  ];\r\n\r\n  const currentYear = new Date().getFullYear();\r\n  const years = Array.from({ length: 5 }, (_, i) => currentYear - i);\r\n\r\n  const toggleYear = (year) => {\r\n    setExpandedYear(expandedYear === year ? null : year);\r\n  };\r\n\r\n  return (\r\n    <div className=\"app-container\">\r\n      <div className=\"sidebar\">\r\n        <div className=\"stats\">\r\n          <h2>Task Statistics</h2>\r\n          <p><FaTasks /> Total Tasks: {stats.total}</p>\r\n          <p><FaCheckCircle /> Completed: {stats.completed}</p>\r\n          <p><FaTimesCircle /> Incomplete: {stats.incomplete}</p>\r\n          <p><FaArchive /> Archived: {stats.archived}</p>\r\n        </div>\r\n        <div className=\"task-form-container\">\r\n          <form onSubmit={handleSubmit} className=\"task-form\">\r\n            <input\r\n              value={title}\r\n              onChange={(e) => setTitle(e.target.value)}\r\n              placeholder=\"Task Title\"\r\n              required\r\n              className=\"task-input\"\r\n            />\r\n            <textarea\r\n              value={description}\r\n              onChange={(e) => setDescription(e.target.value)}\r\n              placeholder=\"Description\"\r\n              className=\"task-textarea\"\r\n            />\r\n            <input\r\n              type=\"date\"\r\n              value={endDate}\r\n              onChange={(e) => setEndDate(e.target.value)}\r\n              className=\"task-input\"\r\n            />\r\n            <button type=\"submit\" className=\"task-button primary\">\r\n              <FaPlus /> Add Task\r\n            </button>\r\n          </form>\r\n        </div>\r\n        <div className=\"month-filter\">\r\n          <h3>Filter by Month</h3>\r\n          <button \r\n            onClick={() => { \r\n              const now = new Date();\r\n              setSelectedMonth({ month: now.getMonth(), year: now.getFullYear() }); \r\n              fetchTasks({ month: now.getMonth(), year: now.getFullYear() }); \r\n            }} \r\n            className={`month-button ${selectedMonth?.month === new Date().getMonth() && selectedMonth?.year === new Date().getFullYear() ? 'active' : ''}`}\r\n          >\r\n            Current Month\r\n          </button>\r\n          {years.map(year => (\r\n            <div key={year} className=\"year-section\">\r\n              <button \r\n                onClick={() => toggleYear(year)} \r\n                className=\"year-toggle\"\r\n              >\r\n                {year} {expandedYear === year ? <FaAngleUp /> : <FaAngleDown />}\r\n              </button>\r\n              {expandedYear === year && (\r\n                <div className=\"month-list\">\r\n                  {months.map((month, index) => (\r\n                    <button\r\n                      key={`${year}-${index}`}\r\n                      onClick={() => { \r\n                        setSelectedMonth({ month: index, year }); \r\n                        fetchTasks({ month: index, year }); \r\n                      }}\r\n                      className={`month-button ${selectedMonth?.month === index && selectedMonth?.year === year ? 'active' : ''}`}\r\n                    >\r\n                      {month}\r\n                    </button>\r\n                  ))}\r\n                </div>\r\n              )}\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <button \r\n          onClick={() => { setShowArchived(!showArchived); fetchTasks(); }} \r\n          className=\"task-button\"\r\n        >\r\n          {showArchived ? 'Hide Archived' : 'Show Archived'}\r\n        </button>\r\n      </div>\r\n      <div className=\"main-content\">\r\n        <div className=\"header\">\r\n          <h1 className=\"title\">Task Manager</h1>\r\n          <button onClick={handleLogout} className=\"task-button logout\">\r\n            <FaSignOutAlt /> Logout\r\n          </button>\r\n        </div>\r\n        {error && <p className=\"error\">{error}</p>}\r\n        {loading ? (\r\n          <p>Loading tasks...</p>\r\n        ) : (\r\n          <div className=\"task-list\">\r\n            {tasks.length === 0 ? (\r\n              <p>No tasks found for {months[selectedMonth.month]} {selectedMonth.year}.</p>\r\n            ) : (\r\n              tasks.map((task) => (\r\n                <div key={task._id} className={`task-card ${task.completed ? 'completed' : ''} ${task.isArchived ? 'archived' : ''}`}>\r\n                  {editingTaskId === task._id ? (\r\n                    <>\r\n                      <input\r\n                        value={editTitle}\r\n                        onChange={(e) => setEditTitle(e.target.value)}\r\n                        placeholder=\"Task Title\"\r\n                        className=\"task-input edit-input\"\r\n                      />\r\n                      <textarea\r\n                        value={editDescription}\r\n                        onChange={(e) => setEditDescription(e.target.value)}\r\n                        placeholder=\"Description\"\r\n                        className=\"task-textarea edit-textarea\"\r\n                      />\r\n                      <input\r\n                        type=\"date\"\r\n                        value={editEndDate}\r\n                        onChange={(e) => setEditEndDate(e.target.value)}\r\n                        className=\"task-input edit-input\"\r\n                      />\r\n                      <div className=\"task-actions\">\r\n                        <button onClick={() => saveEdit(task._id)} className=\"task-button save\">\r\n                          <FaCheck /> Save\r\n                        </button>\r\n                        <button onClick={cancelEditing} className=\"task-button cancel\">\r\n                          Cancel\r\n                        </button>\r\n                      </div>\r\n                    </>\r\n                  ) : (\r\n                    <>\r\n                      <h3 className=\"task-title\">{task.title}</h3>\r\n                      <p className=\"task-desc\">{task.description || 'No description'}</p>\r\n                      <p className=\"task-date\">Created: {new Date(task.createdAt).toLocaleDateString()}</p>\r\n                      {task.endDate && (\r\n                        <p className=\"task-date\">End Date: {new Date(task.endDate).toLocaleDateString()}</p>\r\n                      )}\r\n                      <div className=\"task-actions\">\r\n                        {!task.isArchived && (\r\n                          <>\r\n                            <button\r\n                              onClick={() => toggleComplete(task)}\r\n                              className={`task-button ${task.completed ? 'undo' : 'complete'}`}\r\n                            >\r\n                              {task.completed ? <FaUndo /> : <FaCheck />} \r\n                              {task.completed ? ' Mark Incomplete' : ' Mark Complete'}\r\n                            </button>\r\n                            <button onClick={() => startEditing(task)} className=\"task-button edit\">\r\n                              <FaEdit /> Edit\r\n                            </button>\r\n                          </>\r\n                        )}\r\n                        <button \r\n                          onClick={() => task.isArchived ? restoreTask(task._id) : archiveTask(task._id)} \r\n                          className=\"task-button delete\"\r\n                        >\r\n                          {task.isArchived ? <FaUndo /> : <FaTrash />} \r\n                          {task.isArchived ? ' Restore' : ' Archive'}\r\n                        </button>\r\n                      </div>\r\n                    </>\r\n                  )}\r\n                </div>\r\n              ))\r\n            )}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Tasks;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}