{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kimmie\\\\task_managerr\\\\task-manager\\\\client\\\\src\\\\pages\\\\Tasks.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { FaPlus, FaCheck, FaUndo, FaEdit, FaTrash, FaSignOutAlt, FaTasks, FaCheckCircle, FaTimesCircle, FaTrashAlt } from 'react-icons/fa';\nimport '../index.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Tasks = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [editingTaskId, setEditingTaskId] = useState(null);\n  const [editTitle, setEditTitle] = useState('');\n  const [editDescription, setEditDescription] = useState('');\n  const [stats, setStats] = useState({\n    completed: 0,\n    incomplete: 0,\n    deleted: 0,\n    total: 0\n  });\n  const [selectedMonth, setSelectedMonth] = useState(null); // null for current, { month, year } for specific\n  const navigate = useNavigate();\n  const apiUrl = process.env.REACT_APP_API_URL || 'http://localhost:5000';\n  useEffect(() => {\n    fetchTasks();\n  }, []);\n  const getAuthHeader = () => {\n    const token = localStorage.getItem('token');\n    return token ? {\n      Authorization: `Bearer ${token}`\n    } : null;\n  };\n  const fetchTasks = async (monthFilter = null) => {\n    setLoading(true);\n    setError('');\n    const headers = getAuthHeader();\n    if (!headers) {\n      setError('Please log in to view tasks');\n      navigate('/login');\n      return;\n    }\n    try {\n      const res = await axios.get(`${apiUrl}/api/tasks`, {\n        headers\n      });\n      const allTasks = res.data;\n      const now = new Date();\n      const currentTasks = allTasks.filter(task => {\n        const taskDate = new Date(task.createdAt);\n        return (now - taskDate) / (1000 * 60 * 60 * 24) <= 30; // Less than 30 days\n      });\n      setTasks(monthFilter ? filterByMonth(allTasks, monthFilter) : currentTasks);\n      updateStats(allTasks);\n    } catch (err) {\n      var _err$response, _err$response2;\n      console.error('Fetch tasks error:', ((_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.data) || err.message);\n      if (((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : _err$response2.status) === 401) {\n        setError('Session expired. Please log in again.');\n        localStorage.removeItem('token');\n        navigate('/login');\n      } else {\n        setError('Failed to fetch tasks');\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n  const updateStats = allTasks => {\n    const completed = allTasks.filter(t => t.completed).length;\n    const incomplete = allTasks.filter(t => !t.completed).length;\n    const total = allTasks.length;\n    const deleted = stats.deleted;\n    setStats({\n      completed,\n      incomplete,\n      deleted,\n      total\n    });\n  };\n  const filterByMonth = (tasks, {\n    month,\n    year\n  }) => {\n    return tasks.filter(task => {\n      const taskDate = new Date(task.createdAt);\n      return taskDate.getMonth() === month && taskDate.getFullYear() === year;\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const headers = getAuthHeader();\n    if (!headers) return;\n    try {\n      await axios.post(`${apiUrl}/api/tasks`, {\n        title,\n        description\n      }, {\n        headers\n      });\n      setTitle('');\n      setDescription('');\n      fetchTasks();\n    } catch (err) {\n      setError('Failed to add task');\n    }\n  };\n  const toggleComplete = async task => {\n    const headers = getAuthHeader();\n    if (!headers) return;\n    try {\n      await axios.put(`${apiUrl}/api/tasks/${task._id}`, {\n        ...task,\n        completed: !task.completed\n      }, {\n        headers\n      });\n      fetchTasks(selectedMonth);\n    } catch (err) {\n      setError('Failed to update task');\n    }\n  };\n  const deleteTask = async id => {\n    const headers = getAuthHeader();\n    if (!headers) return;\n    try {\n      await axios.delete(`${apiUrl}/api/tasks/${id}`, {\n        headers\n      });\n      setStats(prev => ({\n        ...prev,\n        deleted: prev.deleted + 1\n      }));\n      fetchTasks(selectedMonth);\n    } catch (err) {\n      setError('Failed to delete task');\n    }\n  };\n  const startEditing = task => {\n    setEditingTaskId(task._id);\n    setEditTitle(task.title);\n    setEditDescription(task.description || '');\n  };\n  const cancelEditing = () => {\n    setEditingTaskId(null);\n    setEditTitle('');\n    setEditDescription('');\n  };\n  const saveEdit = async id => {\n    const headers = getAuthHeader();\n    if (!headers) return;\n    try {\n      await axios.put(`${apiUrl}/api/tasks/${id}`, {\n        title: editTitle,\n        description: editDescription,\n        completed: tasks.find(t => t._id === id).completed\n      }, {\n        headers\n      });\n      setEditingTaskId(null);\n      fetchTasks(selectedMonth);\n    } catch (err) {\n      setError('Failed to update task');\n    }\n  };\n  const handleLogout = () => {\n    localStorage.removeItem('token');\n    navigate('/login');\n  };\n  const months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n\n  // Generate years dynamically (last 5 years for simplicity)\n  const currentYear = new Date().getFullYear();\n  const years = Array.from({\n    length: 5\n  }, (_, i) => currentYear - i);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stats\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Task Statistics\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(FaTasks, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 14\n          }, this), \" Total Tasks: \", stats.total]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(FaCheckCircle, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 14\n          }, this), \" Completed: \", stats.completed]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(FaTimesCircle, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 14\n          }, this), \" Incomplete: \", stats.incomplete]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(FaTrashAlt, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 14\n          }, this), \" Deleted: \", stats.deleted]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"task-form-container\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          className: \"task-form\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            value: title,\n            onChange: e => setTitle(e.target.value),\n            placeholder: \"Task Title\",\n            required: true,\n            className: \"task-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: description,\n            onChange: e => setDescription(e.target.value),\n            placeholder: \"Description\",\n            className: \"task-textarea\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"task-button primary\",\n            children: [/*#__PURE__*/_jsxDEV(FaPlus, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 15\n            }, this), \" Add Task\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"month-filter\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Filter by Month\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            setSelectedMonth(null);\n            fetchTasks();\n          },\n          className: `month-button ${selectedMonth === null ? 'active' : ''}`,\n          children: \"Current Tasks\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this), years.map(year => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"year-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: year\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 15\n          }, this), months.map((month, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              setSelectedMonth({\n                month: index,\n                year\n              });\n              fetchTasks({\n                month: index,\n                year\n              });\n            },\n            className: `month-button ${(selectedMonth === null || selectedMonth === void 0 ? void 0 : selectedMonth.month) === index && (selectedMonth === null || selectedMonth === void 0 ? void 0 : selectedMonth.year) === year ? 'active' : ''}`,\n            children: month\n          }, `${year}-${index}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 17\n          }, this))]\n        }, year, true, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"title\",\n          children: \"Task Manager\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleLogout,\n          className: \"task-button logout\",\n          children: [/*#__PURE__*/_jsxDEV(FaSignOutAlt, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 13\n          }, this), \" Logout\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 19\n      }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading tasks...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"task-list\",\n        children: tasks.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"No tasks found for \", selectedMonth !== null ? `${months[selectedMonth.month]} ${selectedMonth.year}` : 'current month', \".\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 15\n        }, this) : tasks.map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `task-card ${task.completed ? 'completed' : ''}`,\n          children: editingTaskId === task._id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              value: editTitle,\n              onChange: e => setEditTitle(e.target.value),\n              placeholder: \"Task Title\",\n              className: \"task-input edit-input\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              value: editDescription,\n              onChange: e => setEditDescription(e.target.value),\n              placeholder: \"Description\",\n              className: \"task-textarea edit-textarea\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"task-actions\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => saveEdit(task._id),\n                className: \"task-button save\",\n                children: [/*#__PURE__*/_jsxDEV(FaCheck, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 250,\n                  columnNumber: 27\n                }, this), \" Save\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 249,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: cancelEditing,\n                className: \"task-button cancel\",\n                children: \"Cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 252,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"task-title\",\n              children: task.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"task-desc\",\n              children: task.description || 'No description'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"task-date\",\n              children: [\"Created: \", new Date(task.createdAt).toLocaleDateString()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"task-actions\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => toggleComplete(task),\n                className: `task-button ${task.completed ? 'undo' : 'complete'}`,\n                children: [task.completed ? /*#__PURE__*/_jsxDEV(FaUndo, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 267,\n                  columnNumber: 45\n                }, this) : /*#__PURE__*/_jsxDEV(FaCheck, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 267,\n                  columnNumber: 58\n                }, this), task.completed ? ' Mark Incomplete' : ' Mark Complete']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 263,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => startEditing(task),\n                className: \"task-button edit\",\n                children: [/*#__PURE__*/_jsxDEV(FaEdit, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 271,\n                  columnNumber: 27\n                }, this), \" Edit\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 270,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => deleteTask(task._id),\n                className: \"task-button delete\",\n                children: [/*#__PURE__*/_jsxDEV(FaTrash, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 274,\n                  columnNumber: 27\n                }, this), \" Delete\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 273,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true)\n        }, task._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 161,\n    columnNumber: 5\n  }, this);\n};\n_s(Tasks, \"GRnqedDCUOlsgbWDW3vrpAd5hhw=\", false, function () {\n  return [useNavigate];\n});\n_c = Tasks;\nexport default Tasks;\nvar _c;\n$RefreshReg$(_c, \"Tasks\");","map":{"version":3,"names":["React","useState","useEffect","axios","useNavigate","FaPlus","FaCheck","FaUndo","FaEdit","FaTrash","FaSignOutAlt","FaTasks","FaCheckCircle","FaTimesCircle","FaTrashAlt","jsxDEV","_jsxDEV","Fragment","_Fragment","Tasks","_s","tasks","setTasks","title","setTitle","description","setDescription","error","setError","loading","setLoading","editingTaskId","setEditingTaskId","editTitle","setEditTitle","editDescription","setEditDescription","stats","setStats","completed","incomplete","deleted","total","selectedMonth","setSelectedMonth","navigate","apiUrl","process","env","REACT_APP_API_URL","fetchTasks","getAuthHeader","token","localStorage","getItem","Authorization","monthFilter","headers","res","get","allTasks","data","now","Date","currentTasks","filter","task","taskDate","createdAt","filterByMonth","updateStats","err","_err$response","_err$response2","console","response","message","status","removeItem","t","length","month","year","getMonth","getFullYear","handleSubmit","e","preventDefault","post","toggleComplete","put","_id","deleteTask","id","delete","prev","startEditing","cancelEditing","saveEdit","find","handleLogout","months","currentYear","years","Array","from","_","i","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","value","onChange","target","placeholder","required","type","onClick","map","index","toLocaleDateString","_c","$RefreshReg$"],"sources":["C:/Users/kimmie/task_managerr/task-manager/client/src/pages/Tasks.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { \r\n  FaPlus, FaCheck, FaUndo, FaEdit, FaTrash, FaSignOutAlt, \r\n  FaTasks, FaCheckCircle, FaTimesCircle, FaTrashAlt \r\n} from 'react-icons/fa';\r\nimport '../index.css';\r\n\r\nconst Tasks = () => {\r\n  const [tasks, setTasks] = useState([]);\r\n  const [title, setTitle] = useState('');\r\n  const [description, setDescription] = useState('');\r\n  const [error, setError] = useState('');\r\n  const [loading, setLoading] = useState(true);\r\n  const [editingTaskId, setEditingTaskId] = useState(null);\r\n  const [editTitle, setEditTitle] = useState('');\r\n  const [editDescription, setEditDescription] = useState('');\r\n  const [stats, setStats] = useState({ completed: 0, incomplete: 0, deleted: 0, total: 0 });\r\n  const [selectedMonth, setSelectedMonth] = useState(null); // null for current, { month, year } for specific\r\n  const navigate = useNavigate();\r\n  const apiUrl = process.env.REACT_APP_API_URL || 'http://localhost:5000';\r\n\r\n  useEffect(() => {\r\n    fetchTasks();\r\n  }, []);\r\n\r\n  const getAuthHeader = () => {\r\n    const token = localStorage.getItem('token');\r\n    return token ? { Authorization: `Bearer ${token}` } : null;\r\n  };\r\n\r\n  const fetchTasks = async (monthFilter = null) => {\r\n    setLoading(true);\r\n    setError('');\r\n    const headers = getAuthHeader();\r\n    if (!headers) {\r\n      setError('Please log in to view tasks');\r\n      navigate('/login');\r\n      return;\r\n    }\r\n    try {\r\n      const res = await axios.get(`${apiUrl}/api/tasks`, { headers });\r\n      const allTasks = res.data;\r\n      const now = new Date();\r\n      const currentTasks = allTasks.filter(task => {\r\n        const taskDate = new Date(task.createdAt);\r\n        return (now - taskDate) / (1000 * 60 * 60 * 24) <= 30; // Less than 30 days\r\n      });\r\n      setTasks(monthFilter ? filterByMonth(allTasks, monthFilter) : currentTasks);\r\n      updateStats(allTasks);\r\n    } catch (err) {\r\n      console.error('Fetch tasks error:', err.response?.data || err.message);\r\n      if (err.response?.status === 401) {\r\n        setError('Session expired. Please log in again.');\r\n        localStorage.removeItem('token');\r\n        navigate('/login');\r\n      } else {\r\n        setError('Failed to fetch tasks');\r\n      }\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const updateStats = (allTasks) => {\r\n    const completed = allTasks.filter(t => t.completed).length;\r\n    const incomplete = allTasks.filter(t => !t.completed).length;\r\n    const total = allTasks.length;\r\n    const deleted = stats.deleted;\r\n    setStats({ completed, incomplete, deleted, total });\r\n  };\r\n\r\n  const filterByMonth = (tasks, { month, year }) => {\r\n    return tasks.filter(task => {\r\n      const taskDate = new Date(task.createdAt);\r\n      return taskDate.getMonth() === month && taskDate.getFullYear() === year;\r\n    });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const headers = getAuthHeader();\r\n    if (!headers) return;\r\n    try {\r\n      await axios.post(`${apiUrl}/api/tasks`, { title, description }, { headers });\r\n      setTitle('');\r\n      setDescription('');\r\n      fetchTasks();\r\n    } catch (err) {\r\n      setError('Failed to add task');\r\n    }\r\n  };\r\n\r\n  const toggleComplete = async (task) => {\r\n    const headers = getAuthHeader();\r\n    if (!headers) return;\r\n    try {\r\n      await axios.put(`${apiUrl}/api/tasks/${task._id}`, { ...task, completed: !task.completed }, { headers });\r\n      fetchTasks(selectedMonth);\r\n    } catch (err) {\r\n      setError('Failed to update task');\r\n    }\r\n  };\r\n\r\n  const deleteTask = async (id) => {\r\n    const headers = getAuthHeader();\r\n    if (!headers) return;\r\n    try {\r\n      await axios.delete(`${apiUrl}/api/tasks/${id}`, { headers });\r\n      setStats(prev => ({ ...prev, deleted: prev.deleted + 1 }));\r\n      fetchTasks(selectedMonth);\r\n    } catch (err) {\r\n      setError('Failed to delete task');\r\n    }\r\n  };\r\n\r\n  const startEditing = (task) => {\r\n    setEditingTaskId(task._id);\r\n    setEditTitle(task.title);\r\n    setEditDescription(task.description || '');\r\n  };\r\n\r\n  const cancelEditing = () => {\r\n    setEditingTaskId(null);\r\n    setEditTitle('');\r\n    setEditDescription('');\r\n  };\r\n\r\n  const saveEdit = async (id) => {\r\n    const headers = getAuthHeader();\r\n    if (!headers) return;\r\n    try {\r\n      await axios.put(`${apiUrl}/api/tasks/${id}`, { \r\n        title: editTitle, \r\n        description: editDescription, \r\n        completed: tasks.find(t => t._id === id).completed \r\n      }, { headers });\r\n      setEditingTaskId(null);\r\n      fetchTasks(selectedMonth);\r\n    } catch (err) {\r\n      setError('Failed to update task');\r\n    }\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    localStorage.removeItem('token');\r\n    navigate('/login');\r\n  };\r\n\r\n  const months = [\r\n    'January', 'February', 'March', 'April', 'May', 'June',\r\n    'July', 'August', 'September', 'October', 'November', 'December'\r\n  ];\r\n\r\n  // Generate years dynamically (last 5 years for simplicity)\r\n  const currentYear = new Date().getFullYear();\r\n  const years = Array.from({ length: 5 }, (_, i) => currentYear - i);\r\n\r\n  return (\r\n    <div className=\"app-container\">\r\n      <div className=\"sidebar\">\r\n        <div className=\"stats\">\r\n          <h2>Task Statistics</h2>\r\n          <p><FaTasks /> Total Tasks: {stats.total}</p>\r\n          <p><FaCheckCircle /> Completed: {stats.completed}</p>\r\n          <p><FaTimesCircle /> Incomplete: {stats.incomplete}</p>\r\n          <p><FaTrashAlt /> Deleted: {stats.deleted}</p>\r\n        </div>\r\n        <div className=\"task-form-container\">\r\n          <form onSubmit={handleSubmit} className=\"task-form\">\r\n            <input\r\n              value={title}\r\n              onChange={(e) => setTitle(e.target.value)}\r\n              placeholder=\"Task Title\"\r\n              required\r\n              className=\"task-input\"\r\n            />\r\n            <textarea\r\n              value={description}\r\n              onChange={(e) => setDescription(e.target.value)}\r\n              placeholder=\"Description\"\r\n              className=\"task-textarea\"\r\n            />\r\n            <button type=\"submit\" className=\"task-button primary\">\r\n              <FaPlus /> Add Task\r\n            </button>\r\n          </form>\r\n        </div>\r\n        <div className=\"month-filter\">\r\n          <h3>Filter by Month</h3>\r\n          <button \r\n            onClick={() => { setSelectedMonth(null); fetchTasks(); }} \r\n            className={`month-button ${selectedMonth === null ? 'active' : ''}`}\r\n          >\r\n            Current Tasks\r\n          </button>\r\n          {years.map(year => (\r\n            <div key={year} className=\"year-section\">\r\n              <h4>{year}</h4>\r\n              {months.map((month, index) => (\r\n                <button\r\n                  key={`${year}-${index}`}\r\n                  onClick={() => { \r\n                    setSelectedMonth({ month: index, year }); \r\n                    fetchTasks({ month: index, year }); \r\n                  }}\r\n                  className={`month-button ${selectedMonth?.month === index && selectedMonth?.year === year ? 'active' : ''}`}\r\n                >\r\n                  {month}\r\n                </button>\r\n              ))}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n      <div className=\"main-content\">\r\n        <div className=\"header\">\r\n          <h1 className=\"title\">Task Manager</h1>\r\n          <button onClick={handleLogout} className=\"task-button logout\">\r\n            <FaSignOutAlt /> Logout\r\n          </button>\r\n        </div>\r\n        {error && <p className=\"error\">{error}</p>}\r\n        {loading ? (\r\n          <p>Loading tasks...</p>\r\n        ) : (\r\n          <div className=\"task-list\">\r\n            {tasks.length === 0 ? (\r\n              <p>No tasks found for {selectedMonth !== null ? `${months[selectedMonth.month]} ${selectedMonth.year}` : 'current month'}.</p>\r\n            ) : (\r\n              tasks.map((task) => (\r\n                <div key={task._id} className={`task-card ${task.completed ? 'completed' : ''}`}>\r\n                  {editingTaskId === task._id ? (\r\n                    <>\r\n                      <input\r\n                        value={editTitle}\r\n                        onChange={(e) => setEditTitle(e.target.value)}\r\n                        placeholder=\"Task Title\"\r\n                        className=\"task-input edit-input\"\r\n                      />\r\n                      <textarea\r\n                        value={editDescription}\r\n                        onChange={(e) => setEditDescription(e.target.value)}\r\n                        placeholder=\"Description\"\r\n                        className=\"task-textarea edit-textarea\"\r\n                      />\r\n                      <div className=\"task-actions\">\r\n                        <button onClick={() => saveEdit(task._id)} className=\"task-button save\">\r\n                          <FaCheck /> Save\r\n                        </button>\r\n                        <button onClick={cancelEditing} className=\"task-button cancel\">\r\n                          Cancel\r\n                        </button>\r\n                      </div>\r\n                    </>\r\n                  ) : (\r\n                    <>\r\n                      <h3 className=\"task-title\">{task.title}</h3>\r\n                      <p className=\"task-desc\">{task.description || 'No description'}</p>\r\n                      <p className=\"task-date\">Created: {new Date(task.createdAt).toLocaleDateString()}</p>\r\n                      <div className=\"task-actions\">\r\n                        <button\r\n                          onClick={() => toggleComplete(task)}\r\n                          className={`task-button ${task.completed ? 'undo' : 'complete'}`}\r\n                        >\r\n                          {task.completed ? <FaUndo /> : <FaCheck />} \r\n                          {task.completed ? ' Mark Incomplete' : ' Mark Complete'}\r\n                        </button>\r\n                        <button onClick={() => startEditing(task)} className=\"task-button edit\">\r\n                          <FaEdit /> Edit\r\n                        </button>\r\n                        <button onClick={() => deleteTask(task._id)} className=\"task-button delete\">\r\n                          <FaTrash /> Delete\r\n                        </button>\r\n                      </div>\r\n                    </>\r\n                  )}\r\n                </div>\r\n              ))\r\n            )}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Tasks;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}