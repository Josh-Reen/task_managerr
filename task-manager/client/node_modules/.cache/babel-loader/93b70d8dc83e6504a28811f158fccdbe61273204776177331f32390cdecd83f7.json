{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kimmie\\\\task_managerr\\\\task-manager\\\\client\\\\src\\\\pages\\\\Tasks.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { FaPlus, FaCheck, FaUndo, FaEdit, FaTrash, FaSignOutAlt, FaTasks, FaCheckCircle, FaTimesCircle, FaTrashAlt } from 'react-icons/fa';\nimport '../index.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Tasks = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [editingTaskId, setEditingTaskId] = useState(null);\n  const [editTitle, setEditTitle] = useState('');\n  const [editDescription, setEditDescription] = useState('');\n  const [stats, setStats] = useState({\n    completed: 0,\n    incomplete: 0,\n    deleted: 0,\n    total: 0\n  });\n  const [selectedMonth, setSelectedMonth] = useState(null);\n  const navigate = useNavigate();\n  const apiUrl = process.env.REACT_APP_API_URL || 'http://localhost:5000';\n  useEffect(() => {\n    fetchTasks();\n  }, []);\n  const getAuthHeader = () => {\n    const token = localStorage.getItem('token');\n    return token ? {\n      Authorization: `Bearer ${token}`\n    } : null;\n  };\n  const fetchTasks = async (month = null) => {\n    setLoading(true);\n    setError('');\n    const headers = getAuthHeader();\n    if (!headers) {\n      setError('Please log in to view tasks');\n      navigate('/login');\n      return;\n    }\n    try {\n      const res = await axios.get(`${apiUrl}/api/tasks`, {\n        headers\n      });\n      const allTasks = res.data;\n      const now = new Date();\n      const currentTasks = allTasks.filter(task => {\n        const taskDate = new Date(task.createdAt);\n        return (now - taskDate) / (1000 * 60 * 60 * 24) <= 30; // Less than 30 days\n      });\n      setTasks(month ? filterByMonth(allTasks, month) : currentTasks);\n      updateStats(allTasks);\n    } catch (err) {\n      var _err$response, _err$response2;\n      console.error('Fetch tasks error:', ((_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.data) || err.message);\n      if (((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : _err$response2.status) === 401) {\n        setError('Session expired. Please log in again.');\n        localStorage.removeItem('token');\n        navigate('/login');\n      } else {\n        setError('Failed to fetch tasks');\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n  const updateStats = allTasks => {\n    const completed = allTasks.filter(t => t.completed).length;\n    const incomplete = allTasks.filter(t => !t.completed).length;\n    const total = allTasks.length;\n    const deleted = stats.deleted; // Persist deleted count across fetches\n    setStats({\n      completed,\n      incomplete,\n      deleted,\n      total\n    });\n  };\n  const filterByMonth = (tasks, month) => {\n    return tasks.filter(task => {\n      const taskDate = new Date(task.createdAt);\n      return taskDate.getMonth() === month && taskDate.getFullYear() === new Date().getFullYear();\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const headers = getAuthHeader();\n    if (!headers) return;\n    try {\n      await axios.post(`${apiUrl}/api/tasks`, {\n        title,\n        description\n      }, {\n        headers\n      });\n      setTitle('');\n      setDescription('');\n      fetchTasks();\n    } catch (err) {\n      setError('Failed to add task');\n    }\n  };\n  const toggleComplete = async task => {\n    const headers = getAuthHeader();\n    if (!headers) return;\n    try {\n      await axios.put(`${apiUrl}/api/tasks/${task._id}`, {\n        ...task,\n        completed: !task.completed\n      }, {\n        headers\n      });\n      fetchTasks(selectedMonth);\n    } catch (err) {\n      setError('Failed to update task');\n    }\n  };\n  const deleteTask = async id => {\n    const headers = getAuthHeader();\n    if (!headers) return;\n    try {\n      await axios.delete(`${apiUrl}/api/tasks/${id}`, {\n        headers\n      });\n      setStats(prev => ({\n        ...prev,\n        deleted: prev.deleted + 1\n      }));\n      fetchTasks(selectedMonth);\n    } catch (err) {\n      setError('Failed to delete task');\n    }\n  };\n  const startEditing = task => {\n    setEditingTaskId(task._id);\n    setEditTitle(task.title);\n    setEditDescription(task.description || '');\n  };\n  const cancelEditing = () => {\n    setEditingTaskId(null);\n    setEditTitle('');\n    setEditDescription('');\n  };\n  const saveEdit = async id => {\n    const headers = getAuthHeader();\n    if (!headers) return;\n    try {\n      await axios.put(`${apiUrl}/api/tasks/${id}`, {\n        title: editTitle,\n        description: editDescription,\n        completed: tasks.find(t => t._id === id).completed\n      }, {\n        headers\n      });\n      setEditingTaskId(null);\n      fetchTasks(selectedMonth);\n    } catch (err) {\n      setError('Failed to update task');\n    }\n  };\n  const handleLogout = () => {\n    localStorage.removeItem('token');\n    navigate('/login');\n  };\n  const months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stats\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Task Statistics\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(FaTasks, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 14\n          }, this), \" Total Tasks: \", stats.total]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(FaCheckCircle, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 14\n          }, this), \" Completed: \", stats.completed]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(FaTimesCircle, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 14\n          }, this), \" Incomplete: \", stats.incomplete]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(FaTrashAlt, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 14\n          }, this), \" Deleted: \", stats.deleted]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"task-form-container\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          className: \"task-form\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            value: title,\n            onChange: e => setTitle(e.target.value),\n            placeholder: \"Task Title\",\n            required: true,\n            className: \"task-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: description,\n            onChange: e => setDescription(e.target.value),\n            placeholder: \"Description\",\n            className: \"task-textarea\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"task-button primary\",\n            children: [/*#__PURE__*/_jsxDEV(FaPlus, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 15\n            }, this), \" Add Task\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"month-filter\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Filter by Month\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            setSelectedMonth(null);\n            fetchTasks();\n          },\n          className: \"month-button\",\n          children: \"Current Tasks\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 11\n        }, this), months.map((month, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            setSelectedMonth(index);\n            fetchTasks(index);\n          },\n          className: `month-button ${selectedMonth === index ? 'active' : ''}`,\n          children: month\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"title\",\n          children: \"Task Manager\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleLogout,\n          className: \"task-button logout\",\n          children: [/*#__PURE__*/_jsxDEV(FaSignOutAlt, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 13\n          }, this), \" Logout\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 19\n      }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading tasks...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"task-list\",\n        children: tasks.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"No tasks found for \", selectedMonth !== null ? months[selectedMonth] : 'current month', \".\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 15\n        }, this) : tasks.map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `task-card ${task.completed ? 'completed' : ''}`,\n          children: editingTaskId === task._id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              value: editTitle,\n              onChange: e => setEditTitle(e.target.value),\n              placeholder: \"Task Title\",\n              className: \"task-input edit-input\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              value: editDescription,\n              onChange: e => setEditDescription(e.target.value),\n              placeholder: \"Description\",\n              className: \"task-textarea edit-textarea\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"task-actions\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => saveEdit(task._id),\n                className: \"task-button save\",\n                children: [/*#__PURE__*/_jsxDEV(FaCheck, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 235,\n                  columnNumber: 27\n                }, this), \" Save\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 234,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: cancelEditing,\n                className: \"task-button cancel\",\n                children: \"Cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 237,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"task-title\",\n              children: task.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"task-desc\",\n              children: task.description || 'No description'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"task-date\",\n              children: [\"Created: \", new Date(task.createdAt).toLocaleDateString()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"task-actions\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => toggleComplete(task),\n                className: `task-button ${task.completed ? 'undo' : 'complete'}`,\n                children: [task.completed ? /*#__PURE__*/_jsxDEV(FaUndo, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 252,\n                  columnNumber: 45\n                }, this) : /*#__PURE__*/_jsxDEV(FaCheck, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 252,\n                  columnNumber: 58\n                }, this), task.completed ? ' Mark Incomplete' : ' Mark Complete']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 248,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => startEditing(task),\n                className: \"task-button edit\",\n                children: [/*#__PURE__*/_jsxDEV(FaEdit, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 256,\n                  columnNumber: 27\n                }, this), \" Edit\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 255,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => deleteTask(task._id),\n                className: \"task-button delete\",\n                children: [/*#__PURE__*/_jsxDEV(FaTrash, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 259,\n                  columnNumber: 27\n                }, this), \" Delete\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 258,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true)\n        }, task._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 157,\n    columnNumber: 5\n  }, this);\n};\n_s(Tasks, \"GRnqedDCUOlsgbWDW3vrpAd5hhw=\", false, function () {\n  return [useNavigate];\n});\n_c = Tasks;\nexport default Tasks;\nvar _c;\n$RefreshReg$(_c, \"Tasks\");","map":{"version":3,"names":["React","useState","useEffect","axios","useNavigate","FaPlus","FaCheck","FaUndo","FaEdit","FaTrash","FaSignOutAlt","FaTasks","FaCheckCircle","FaTimesCircle","FaTrashAlt","jsxDEV","_jsxDEV","Fragment","_Fragment","Tasks","_s","tasks","setTasks","title","setTitle","description","setDescription","error","setError","loading","setLoading","editingTaskId","setEditingTaskId","editTitle","setEditTitle","editDescription","setEditDescription","stats","setStats","completed","incomplete","deleted","total","selectedMonth","setSelectedMonth","navigate","apiUrl","process","env","REACT_APP_API_URL","fetchTasks","getAuthHeader","token","localStorage","getItem","Authorization","month","headers","res","get","allTasks","data","now","Date","currentTasks","filter","task","taskDate","createdAt","filterByMonth","updateStats","err","_err$response","_err$response2","console","response","message","status","removeItem","t","length","getMonth","getFullYear","handleSubmit","e","preventDefault","post","toggleComplete","put","_id","deleteTask","id","delete","prev","startEditing","cancelEditing","saveEdit","find","handleLogout","months","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","value","onChange","target","placeholder","required","type","onClick","map","index","toLocaleDateString","_c","$RefreshReg$"],"sources":["C:/Users/kimmie/task_managerr/task-manager/client/src/pages/Tasks.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { \r\n  FaPlus, FaCheck, FaUndo, FaEdit, FaTrash, FaSignOutAlt, \r\n  FaTasks, FaCheckCircle, FaTimesCircle, FaTrashAlt \r\n} from 'react-icons/fa';\r\nimport '../index.css';\r\n\r\nconst Tasks = () => {\r\n  const [tasks, setTasks] = useState([]);\r\n  const [title, setTitle] = useState('');\r\n  const [description, setDescription] = useState('');\r\n  const [error, setError] = useState('');\r\n  const [loading, setLoading] = useState(true);\r\n  const [editingTaskId, setEditingTaskId] = useState(null);\r\n  const [editTitle, setEditTitle] = useState('');\r\n  const [editDescription, setEditDescription] = useState('');\r\n  const [stats, setStats] = useState({ completed: 0, incomplete: 0, deleted: 0, total: 0 });\r\n  const [selectedMonth, setSelectedMonth] = useState(null);\r\n  const navigate = useNavigate();\r\n  const apiUrl = process.env.REACT_APP_API_URL || 'http://localhost:5000';\r\n\r\n  useEffect(() => {\r\n    fetchTasks();\r\n  }, []);\r\n\r\n  const getAuthHeader = () => {\r\n    const token = localStorage.getItem('token');\r\n    return token ? { Authorization: `Bearer ${token}` } : null;\r\n  };\r\n\r\n  const fetchTasks = async (month = null) => {\r\n    setLoading(true);\r\n    setError('');\r\n    const headers = getAuthHeader();\r\n    if (!headers) {\r\n      setError('Please log in to view tasks');\r\n      navigate('/login');\r\n      return;\r\n    }\r\n    try {\r\n      const res = await axios.get(`${apiUrl}/api/tasks`, { headers });\r\n      const allTasks = res.data;\r\n      const now = new Date();\r\n      const currentTasks = allTasks.filter(task => {\r\n        const taskDate = new Date(task.createdAt);\r\n        return (now - taskDate) / (1000 * 60 * 60 * 24) <= 30; // Less than 30 days\r\n      });\r\n      setTasks(month ? filterByMonth(allTasks, month) : currentTasks);\r\n      updateStats(allTasks);\r\n    } catch (err) {\r\n      console.error('Fetch tasks error:', err.response?.data || err.message);\r\n      if (err.response?.status === 401) {\r\n        setError('Session expired. Please log in again.');\r\n        localStorage.removeItem('token');\r\n        navigate('/login');\r\n      } else {\r\n        setError('Failed to fetch tasks');\r\n      }\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const updateStats = (allTasks) => {\r\n    const completed = allTasks.filter(t => t.completed).length;\r\n    const incomplete = allTasks.filter(t => !t.completed).length;\r\n    const total = allTasks.length;\r\n    const deleted = stats.deleted; // Persist deleted count across fetches\r\n    setStats({ completed, incomplete, deleted, total });\r\n  };\r\n\r\n  const filterByMonth = (tasks, month) => {\r\n    return tasks.filter(task => {\r\n      const taskDate = new Date(task.createdAt);\r\n      return taskDate.getMonth() === month && taskDate.getFullYear() === new Date().getFullYear();\r\n    });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const headers = getAuthHeader();\r\n    if (!headers) return;\r\n    try {\r\n      await axios.post(`${apiUrl}/api/tasks`, { title, description }, { headers });\r\n      setTitle('');\r\n      setDescription('');\r\n      fetchTasks();\r\n    } catch (err) {\r\n      setError('Failed to add task');\r\n    }\r\n  };\r\n\r\n  const toggleComplete = async (task) => {\r\n    const headers = getAuthHeader();\r\n    if (!headers) return;\r\n    try {\r\n      await axios.put(`${apiUrl}/api/tasks/${task._id}`, { ...task, completed: !task.completed }, { headers });\r\n      fetchTasks(selectedMonth);\r\n    } catch (err) {\r\n      setError('Failed to update task');\r\n    }\r\n  };\r\n\r\n  const deleteTask = async (id) => {\r\n    const headers = getAuthHeader();\r\n    if (!headers) return;\r\n    try {\r\n      await axios.delete(`${apiUrl}/api/tasks/${id}`, { headers });\r\n      setStats(prev => ({ ...prev, deleted: prev.deleted + 1 }));\r\n      fetchTasks(selectedMonth);\r\n    } catch (err) {\r\n      setError('Failed to delete task');\r\n    }\r\n  };\r\n\r\n  const startEditing = (task) => {\r\n    setEditingTaskId(task._id);\r\n    setEditTitle(task.title);\r\n    setEditDescription(task.description || '');\r\n  };\r\n\r\n  const cancelEditing = () => {\r\n    setEditingTaskId(null);\r\n    setEditTitle('');\r\n    setEditDescription('');\r\n  };\r\n\r\n  const saveEdit = async (id) => {\r\n    const headers = getAuthHeader();\r\n    if (!headers) return;\r\n    try {\r\n      await axios.put(`${apiUrl}/api/tasks/${id}`, { \r\n        title: editTitle, \r\n        description: editDescription, \r\n        completed: tasks.find(t => t._id === id).completed \r\n      }, { headers });\r\n      setEditingTaskId(null);\r\n      fetchTasks(selectedMonth);\r\n    } catch (err) {\r\n      setError('Failed to update task');\r\n    }\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    localStorage.removeItem('token');\r\n    navigate('/login');\r\n  };\r\n\r\n  const months = [\r\n    'January', 'February', 'March', 'April', 'May', 'June',\r\n    'July', 'August', 'September', 'October', 'November', 'December'\r\n  ];\r\n\r\n  return (\r\n    <div className=\"app-container\">\r\n      <div className=\"sidebar\">\r\n        <div className=\"stats\">\r\n          <h2>Task Statistics</h2>\r\n          <p><FaTasks /> Total Tasks: {stats.total}</p>\r\n          <p><FaCheckCircle /> Completed: {stats.completed}</p>\r\n          <p><FaTimesCircle /> Incomplete: {stats.incomplete}</p>\r\n          <p><FaTrashAlt /> Deleted: {stats.deleted}</p>\r\n        </div>\r\n        <div className=\"task-form-container\">\r\n          <form onSubmit={handleSubmit} className=\"task-form\">\r\n            <input\r\n              value={title}\r\n              onChange={(e) => setTitle(e.target.value)}\r\n              placeholder=\"Task Title\"\r\n              required\r\n              className=\"task-input\"\r\n            />\r\n            <textarea\r\n              value={description}\r\n              onChange={(e) => setDescription(e.target.value)}\r\n              placeholder=\"Description\"\r\n              className=\"task-textarea\"\r\n            />\r\n            <button type=\"submit\" className=\"task-button primary\">\r\n              <FaPlus /> Add Task\r\n            </button>\r\n          </form>\r\n        </div>\r\n        <div className=\"month-filter\">\r\n          <h3>Filter by Month</h3>\r\n          <button onClick={() => { setSelectedMonth(null); fetchTasks(); }} className=\"month-button\">\r\n            Current Tasks\r\n          </button>\r\n          {months.map((month, index) => (\r\n            <button\r\n              key={index}\r\n              onClick={() => { setSelectedMonth(index); fetchTasks(index); }}\r\n              className={`month-button ${selectedMonth === index ? 'active' : ''}`}\r\n            >\r\n              {month}\r\n            </button>\r\n          ))}\r\n        </div>\r\n      </div>\r\n      <div className=\"main-content\">\r\n        <div className=\"header\">\r\n          <h1 className=\"title\">Task Manager</h1>\r\n          <button onClick={handleLogout} className=\"task-button logout\">\r\n            <FaSignOutAlt /> Logout\r\n          </button>\r\n        </div>\r\n        {error && <p className=\"error\">{error}</p>}\r\n        {loading ? (\r\n          <p>Loading tasks...</p>\r\n        ) : (\r\n          <div className=\"task-list\">\r\n            {tasks.length === 0 ? (\r\n              <p>No tasks found for {selectedMonth !== null ? months[selectedMonth] : 'current month'}.</p>\r\n            ) : (\r\n              tasks.map((task) => (\r\n                <div key={task._id} className={`task-card ${task.completed ? 'completed' : ''}`}>\r\n                  {editingTaskId === task._id ? (\r\n                    <>\r\n                      <input\r\n                        value={editTitle}\r\n                        onChange={(e) => setEditTitle(e.target.value)}\r\n                        placeholder=\"Task Title\"\r\n                        className=\"task-input edit-input\"\r\n                      />\r\n                      <textarea\r\n                        value={editDescription}\r\n                        onChange={(e) => setEditDescription(e.target.value)}\r\n                        placeholder=\"Description\"\r\n                        className=\"task-textarea edit-textarea\"\r\n                      />\r\n                      <div className=\"task-actions\">\r\n                        <button onClick={() => saveEdit(task._id)} className=\"task-button save\">\r\n                          <FaCheck /> Save\r\n                        </button>\r\n                        <button onClick={cancelEditing} className=\"task-button cancel\">\r\n                          Cancel\r\n                        </button>\r\n                      </div>\r\n                    </>\r\n                  ) : (\r\n                    <>\r\n                      <h3 className=\"task-title\">{task.title}</h3>\r\n                      <p className=\"task-desc\">{task.description || 'No description'}</p>\r\n                      <p className=\"task-date\">Created: {new Date(task.createdAt).toLocaleDateString()}</p>\r\n                      <div className=\"task-actions\">\r\n                        <button\r\n                          onClick={() => toggleComplete(task)}\r\n                          className={`task-button ${task.completed ? 'undo' : 'complete'}`}\r\n                        >\r\n                          {task.completed ? <FaUndo /> : <FaCheck />} \r\n                          {task.completed ? ' Mark Incomplete' : ' Mark Complete'}\r\n                        </button>\r\n                        <button onClick={() => startEditing(task)} className=\"task-button edit\">\r\n                          <FaEdit /> Edit\r\n                        </button>\r\n                        <button onClick={() => deleteTask(task._id)} className=\"task-button delete\">\r\n                          <FaTrash /> Delete\r\n                        </button>\r\n                      </div>\r\n                    </>\r\n                  )}\r\n                </div>\r\n              ))\r\n            )}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Tasks;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}